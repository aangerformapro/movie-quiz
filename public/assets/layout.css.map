{"version":3,"sources":["../../scss/helpers/_mixins.scss","../../build/layout.css","../../scss/layout.scss","../../scss/helpers/_variables.scss","../../scss/components/_burger.scss","../../scss/helpers/_varutils.scss","<no source>"],"names":[],"mappings":"AA8HQ;;;EAGI,sBAAA;EACA,SAAA;EACA,UAAA;AC7HZ;;ADgIQ;EACI,eAAA;EACA,gBAAA;EACA,uBAAA;AC7HZ;;ADgIQ;EACI,iBAAA;EAEI,kCAAA;EE1IZ,mBCKiB;EDJjB,cCEY;AFWhB;;ACVA;EACI,YAAA;ADaJ;;ACVQ;EACI,YAAA;EACA,iBAAA;ADYZ;;ACRQ;EACI,cCZI;AFsBhB;;ACRY;EACI,gBAAA;ADUhB;;ACPY;EACI,kCAAA;EAAA,0BAAA;ADShB;;ACHA;EFkDY,kBEhDW;EFiDX,mBEjDW;ADMvB;;ACJA;EACI,mBAAA;EACA,yBAAA;EAKA,YAAA;EACA,yBAAA;EAAA,qBAAA;EAAA,iBAAA;EACA,kBAAA;EACA,WAAA;ADGJ;;ACDA;EACI,gBAAA;EACA,kBAAA;EACA,gBAAA;ADIJ;;ACDI;EF9CI,eE+CmB;EF3CnB,iBE2C8B;EFvC9B,gBEuCyB;EAEzB,gBAAA;EACA,WAAA;ADIR;;AGhCI;EC6DQ,kCAAA;EAAA,wCAAA;EAAA,wBAAA;EAAA,uCAAA;EAAA,uCAAA;EAAA,yBAAA;EAAA,mBAAA;EAAA,uBAAA;EL8ER,qBIxIkB;EJwIlB,mCIxIkB;EJyIlB,sBIzIkB;EJyIlB,oCIzIkB;EACd,kBAAA;EACA,yBAfM;EAeN,sDAfM;EAgBN,eAAA;AH6DR;;AG3DQ;EJmIJ,mCIlIsB;EJmItB,oCInIsB;EAEd,sDArBE;EAsBF,kBAAA;EACA,wCAAA;EACA,kBAAA;EACA,4BAvBN;EAwBM,2DAAA;EACA,QAAA;AH6DZ;;AG1DQ;EJuHJ,yBI/II;EJgJJ,iCIjJM;EA2BE,sDAhCE;EAiCF,kBAAA;EACA,uBA5BJ;EA6BI,mCAAA;EACA,qCAnCH;EAoCG,wCAhCF;AH6FV;;AG5DY;EAEI,wCAnCN;EAoCM,sDAzCF;EA0CE,kBAAA;EJ2GZ,yBI/II;EJgJJ,iCIjJM;EAuCM,qCA3CP;EA4CO,WAAA;EACA,uCAAA;AH8DhB;;AG3DY;EACI,4BA3CT;AHwGP;;AGxDY;EACI,8BApDR;AH8GR;;AGtDgB;EAGI,8BA3DZ;AHiHR;;AGjDgB;EAGI,iCApET;AHqHX;;AG3CI;EACI,UAAA;EACA,WAAA;EACA,UAAA;EACA,YAAA;EACA,gBAAA;EACA,sBAAA;EACA,mBAAA;EACA,SAAA;EACA,kBAAA;AH8CR;;AGzCQ;;EACI,uBAAA;AH6CZ;;AG3CY;;EAEI,0EAAA;AH6ChB;;AG1CY;;EAEI,sFAAA;AH4ChB;;AKtKA;EJuDI;IF9CI,eEqDuB;IFjDvB,iBEiDkC;IF7ClC,gBE6C6B;EDOnC;ECGF;IAEQ,aAAA;EDON;CKjFF;;AAAA;EJmEA;IAEQ,aAAA;EDMN;CK3EF","file":"layout.css","sourcesContent":["@use 'sass:math';\r\n@use 'variables' as *;\r\n\r\n// $font-family: null !default;\r\n\r\n$reset-done: false !default;\r\n\r\n@mixin font-size($font-size, $font-weight: null, $line-height: null) {\r\n    @if $font-size {\r\n        font-size: $font-size;\r\n    }\r\n\r\n    @if $line-height {\r\n        line-height: $line-height;\r\n    }\r\n\r\n    @if $font-weight {\r\n        font-weight: $font-weight;\r\n    }\r\n}\r\n\r\n@mixin font-family(\r\n    $font-family,\r\n    $font-size: 16px,\r\n    $line-height: 1.2,\r\n    $font-weight: 400,\r\n    $font-style: normal,\r\n    $font-stretch: normal\r\n) {\r\n    @if $font-family {\r\n        font-family: $font-family, sans-serif;\r\n        @include font-size($font-size, $font-weight, $line-height);\r\n    }\r\n\r\n    font: {\r\n        style: $font-style;\r\n        stretch: $font-stretch;\r\n    }\r\n}\r\n\r\n@mixin visually-hidden() {\r\n    width: 1px !important;\r\n    height: 1px !important;\r\n    padding: 0 !important;\r\n    margin: -1px !important; // Fix for https://github.com/twbs/bootstrap/issues/25686\r\n    overflow: hidden !important;\r\n    clip: rect(0, 0, 0, 0) !important;\r\n    white-space: nowrap !important;\r\n    border: 0 !important;\r\n\r\n    // Fix for positioned table caption that could become anonymous cells\r\n    &:not(caption) {\r\n        position: absolute !important;\r\n    }\r\n}\r\n\r\n@mixin visually-hidden-focusable() {\r\n    &:not(:focus):not(:focus-within) {\r\n        @include visually-hidden();\r\n    }\r\n}\r\n\r\n@mixin margin-x($value) {\r\n    @if $value {\r\n        margin: {\r\n            left: $value;\r\n            right: $value;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin margin-y($value) {\r\n    @if $value {\r\n        margin: {\r\n            top: $value;\r\n            bottom: $value;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin padding-x($value) {\r\n    @if $value {\r\n        padding: {\r\n            left: $value;\r\n            right: $value;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin padding-y($value) {\r\n    @if $value {\r\n        padding: {\r\n            top: $value;\r\n            bottom: $value;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin overlay($top: 0, $left: 0, $width: 100%, $height: 100%, $position: absolute, $z-index: 1) {\r\n    position: $position;\r\n    top: $top;\r\n    left: $left;\r\n    width: $width;\r\n    height: $height;\r\n    z-index: $z-index;\r\n}\r\n\r\n%no-margin {\r\n    margin: 0;\r\n}\r\n\r\n%no-padding {\r\n    padding: 0;\r\n}\r\n\r\n%border-box {\r\n    box-sizing: border-box;\r\n}\r\n\r\n%no-overflow {\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin simple-reset {\r\n    @if $reset-done != true {\r\n        $reset-done: true !global;\r\n        *,\r\n        *::after,\r\n        *::before {\r\n            box-sizing: border-box;\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n\r\n        html {\r\n            font-size: 16px;\r\n            line-height: 1.2;\r\n            scroll-behavior: smooth;\r\n        }\r\n\r\n        body {\r\n            min-height: 100vh;\r\n            @if $font-family {\r\n                font-family: $font-family, sans-serif;\r\n            }\r\n\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin flex-center($direction: row) {\r\n    display: flex;\r\n    flex-direction: $direction;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @content;\r\n}\r\n\r\n@mixin make-container($padding-x: 0) {\r\n    width: 100%;\r\n    @include padding-x($padding-x);\r\n    @include margin-x(auto);\r\n}\r\n\r\n@mixin size($width, $height: null) {\r\n    @if $height ==null {\r\n        $height: $width;\r\n    }\r\n\r\n    width: $width;\r\n    height: $height;\r\n}\r\n\r\n@mixin color-mode($mode: dark, $attr: 'theme') {\r\n    [#{$theme}='#{$mode}'] & {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin bs-color-mode($mode: dark) {\r\n    @include color-mode($mode, 'data-bs-theme');\r\n}\r\n\r\n@mixin bs-dark-mode {\r\n    @include color-mode(dark, 'data-bs-theme');\r\n}\r\n\r\n@mixin webp($enabled: true) {\r\n    @if & {\r\n        [data-webp='#{$enabled}'] & {\r\n            @content;\r\n        }\r\n    } @else {\r\n        [data-webp='#{$enabled}'] {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n","*,\n*::after,\n*::before {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  font-size: 16px;\n  line-height: 1.2;\n  scroll-behavior: smooth;\n}\n\nbody {\n  min-height: 100vh;\n  font-family: \"Poppins\", sans-serif;\n  background: #181818;\n  color: #fefcf8;\n}\n\n#top {\n  height: 64px;\n}\n#top .logo img {\n  height: 32px;\n  object-fit: cover;\n}\n#top nav .nav-link {\n  color: #fefcf8;\n}\n#top nav .nav-link.active {\n  font-weight: 500;\n}\n#top nav .nav-link:hover {\n  text-decoration: underline;\n}\n\n.nav-container {\n  padding-left: 12px;\n  padding-right: 12px;\n}\n\n.heading-background-picture {\n  object-fit: contain;\n  object-position: top left;\n  width: 100vw;\n  user-select: none;\n  position: relative;\n  z-index: -1;\n}\n\n.current-item {\n  margin-top: 25vh;\n  position: relative;\n  margin-left: 5vw;\n}\n.current-item .heading-title {\n  font-size: 45px;\n  line-height: 48px;\n  font-weight: 900;\n  max-width: 600px;\n  width: 80vw;\n}\n@media (min-width: 992px) {\n  .current-item .heading-title {\n    font-size: 78px;\n    line-height: 78px;\n    font-weight: 900;\n  }\n}\n\n@media (max-width: 992px) {\n  .hide-on-mobile {\n    display: none;\n  }\n}\n\n@media (min-width: 992px) {\n  .only-display-this-on-mobile {\n    display: none;\n  }\n}\n\n.burger-btn {\n  --burger-transition-duration: 0.5s;\n  --burger-color: rgba(254, 252, 248, 0.8);\n  --burger-bg: transparent;\n  --burger-color-h: rgba(24, 24, 24, 0.9);\n  --burger-bg-h: rgba(254, 252, 248, 0.9);\n  --burger-border-size: 3px;\n  --burger-size: 25px;\n  --burger-layer-gap: 8px;\n  width: calc(var(--burger-size) * 2);\n  height: calc(var(--burger-size) * 2);\n  position: relative;\n  transition-duration: var(--burger-transition-duration);\n  cursor: pointer;\n}\n.burger-btn .burger-circle {\n  width: calc(var(--burger-size) * 2);\n  height: calc(var(--burger-size) * 2);\n  transition-duration: var(--burger-transition-duration);\n  position: absolute;\n  top: calc(var(--burger-border-size) / 2);\n  border-radius: 50%;\n  background: var(--burger-bg);\n  border: var(--burger-border-size) solid var(--burger-color);\n  right: 0;\n}\n.burger-btn .burger {\n  width: var(--burger-size);\n  height: var(--burger-border-size);\n  transition-duration: var(--burger-transition-duration);\n  position: absolute;\n  top: var(--burger-size);\n  right: calc(var(--burger-size) / 2);\n  background-color: var(--burger-color);\n  border-radius: var(--burger-border-size);\n}\n.burger-btn .burger::before, .burger-btn .burger::after {\n  border-radius: var(--burger-border-size);\n  transition-duration: var(--burger-transition-duration);\n  position: absolute;\n  width: var(--burger-size);\n  height: var(--burger-border-size);\n  background-color: var(--burger-color);\n  content: \"\";\n  top: calc(var(--burger-layer-gap) * -1);\n}\n.burger-btn .burger::after {\n  top: var(--burger-layer-gap);\n}\n.burger-btn:hover .burger-circle {\n  background: var(--burger-bg-h);\n}\n.burger-btn:hover .burger, .burger-btn:hover .burger::before, .burger-btn:hover .burger::after {\n  background: var(--burger-bg-h);\n}\n.burger-btn:hover .burger-circle ~ .burger, .burger-btn:hover .burger-circle ~ .burger::before, .burger-btn:hover .burger-circle ~ .burger::after {\n  background: var(--burger-color-h);\n}\n\n[type=checkbox]#burger-btn {\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n  position: absolute;\n}\n\n#burger-btn:checked ~ .burger-btn .burger,\n.burger-btn.open .burger {\n  background: transparent;\n}\n#burger-btn:checked ~ .burger-btn .burger:before,\n.burger-btn.open .burger:before {\n  transform: translateY(var(--burger-layer-gap)) rotateZ(45deg) scaleX(1.25);\n}\n#burger-btn:checked ~ .burger-btn .burger:after,\n.burger-btn.open .burger:after {\n  transform: translateY(calc(var(--burger-layer-gap) * -1)) rotateZ(-45deg) scaleX(1.25);\n}\n\n/*# sourceMappingURL=layout.css.map */\n","@use 'helpers' as *;\r\n\r\n@use './components/burger' as *;\r\n\r\n@include simple-reset {\r\n    background: $netflix-background;\r\n    color: $netflix-white;\r\n}\r\n\r\n#top {\r\n    height: 64px;\r\n\r\n    .logo {\r\n        img {\r\n            height: 32px;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n    nav {\r\n        .nav-link {\r\n            color: $netflix-white;\r\n\r\n            &.active {\r\n                font-weight: 500;\r\n            }\r\n\r\n            &:hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.nav-container {\r\n    // z-index: 3;\r\n    @include padding-x(12px);\r\n}\r\n.heading-background-picture {\r\n    object-fit: contain;\r\n    object-position: top left;\r\n    // max-height: 768px;\r\n\r\n    // height: 50vh;\r\n\r\n    width: 100vw;\r\n    user-select: none;\r\n    position: relative;\r\n    z-index: -1;\r\n}\r\n.current-item {\r\n    margin-top: 25vh;\r\n    position: relative;\r\n    margin-left: 5vw;\r\n    // z-index: 2;\r\n\r\n    .heading-title {\r\n        @include font-size(45px, 900, 48px);\r\n\r\n        max-width: 600px;\r\n        width: 80vw;\r\n\r\n        @include lg {\r\n            @include font-size(78px, 900, 78px);\r\n        }\r\n    }\r\n}\r\n\r\n.hide-on-mobile {\r\n    @include lg-down {\r\n        display: none;\r\n    }\r\n}\r\n.only-display-this-on-mobile {\r\n    @include lg {\r\n        display: none;\r\n    }\r\n}\r\n\r\n@include burger-btn;\r\n","$font-family: 'Poppins';\r\n// $font-family: 'Bebas Neue';\r\n\r\n$neflix-red: #e50914;\r\n$neflix-red-hover: #f40612;\r\n$netflix-black: #181818;\r\n// $netflix-black: #010101;\r\n\r\n$netflix-white: #fefcf8;\r\n$naetflix-gray: #a3a3a3;\r\n$netflix-background: #181818;\r\n$neflix-red-rgb: 219, 32, 44;\r\n\r\n// https://colorswall.com/palette/154112\r\n$cyberpunk-cyan: #02d7f2;\r\n$cyberpunk-yellow: #f2e900;\r\n$cyberpunk-blue: #007aff;\r\n$cyberpunk-red: #ff1111;\r\n\r\n$cyberpunk-cyan-rgb: 2, 215, 242;\r\n$cyberpunk-yellow-rgb: 242, 233, 0;\r\n$cyberpunk-blue-rgb: 0, 122, 255;\r\n$cyberpunk-red-rgb: 255, 17, 17;\r\n\r\n$cyberpunk: linear-gradient(\r\n    -225deg,\r\n    $cyberpunk-cyan 0%,\r\n    $cyberpunk-yellow 29%,\r\n    $cyberpunk-blue 67%,\r\n    $cyberpunk-red 100%\r\n);\r\n\r\n$purpureus: #9d44b5;\r\n$raspberry-rose: #b5446e;\r\n$davys-gray: #525252;\r\n$uranian-blue: #badefc;\r\n$fluorescent-cyan: #0affef;\r\n\r\n$purpureus-rgb: 157, 68, 181;\r\n$raspberry-rose-rgb: 181, 68, 110;\r\n$davys-gray-rgb: 82, 82, 82;\r\n$uranian-blue-rgb: 186, 222, 252;\r\n$fluorescent-cyan-rgb: 10, 255, 237;\r\n\r\n//overrides\r\n\r\n// $spinner-rotate-color: #{$neflix-red};\r\n// $progress-color: $cyberpunk-blue;\r\n\r\n// :root {\r\n//     --cyberpunk-cyan-rgb: #{$cyberpunk-cyan-rgb};\r\n//     --cyberpunk-yellow-rgb: #{$cyberpunk-yellow-rgb};\r\n//     --cyberpunk-blue-rgb: #{$cyberpunk-blue-rgb};\r\n//     --cyberpunk-red-rgb: #{$cyberpunk-red-rgb};\r\n// }\r\n\r\n// $progress-bar-bg: $cyberpunk;\r\n\r\n$loader-g-size: 50vmin;\r\n\r\n$fluo-inner-bg: #000;\r\n$fluo-text-color: #ddd !default;\r\n\r\n// $burger-transition-duration: 0.5s;\r\n$burger-color: rgba(254, 252, 248, 0.8);\r\n$burger-color-h: rgba(24, 24, 24, 0.9);\r\n// $burger-bg: rgba(24, 24, 24, 0.9);\r\n$burger-bg: transparent;\r\n\r\n$burger-bg-h: rgba(254, 252, 248, 0.9);\r\n$burger-border-size: 3px;\r\n$burger-size: 25px;\r\n$burger-layer-gap: 8px;\r\n","@use '../helpers' as *;\n\n$_burger_vars: (\n    burger-transition-duration,\n    burger-color,\n    burger-bg,\n    burger-color-h,\n    burger-bg-h,\n    burger-border-size,\n    burger-size,\n    burger-layer-gap\n);\n$burger-transition-duration: 0.5s !default;\n$burger-color: #333 !default;\n$burger-color-h: #222 !default;\n$burger-bg: #dddd !default;\n$burger-bg-h: #eeee !default;\n$burger-border-size: 4px !default;\n$burger-size: 30px !default;\n$burger-layer-gap: 10px !default;\n\n$_transition: v-add('burger-transition-duration', $burger-transition-duration);\n$_color: v-add('burger-color', $burger-color);\n$_bg: v-add('burger-bg', $burger-bg);\n$_color-h: v-add('burger-color-h', $burger-color-h);\n$_bg-h: v-add('burger-bg-h', $burger-bg-h);\n$_border: v-add('burger-border-size', $burger-border-size);\n$_size: v-add('burger-size', $burger-size);\n$_gap: v-add('burger-layer-gap', $burger-layer-gap);\n\n@mixin burger-btn {\n    .burger-btn {\n        @include v-load($_burger_vars);\n\n        @include size(calc($_size * 2));\n        position: relative;\n        transition-duration: $_transition;\n        cursor: pointer;\n\n        .burger-circle {\n            @include size(calc($_size * 2));\n\n            transition-duration: $_transition;\n            position: absolute;\n            top: calc($_border / 2);\n            border-radius: 50%;\n            background: $_bg;\n            border: $_border solid $_color;\n            right: 0;\n        }\n\n        .burger {\n            @include size($_size, $_border);\n            transition-duration: $_transition;\n            position: absolute;\n            top: $_size;\n            right: calc($_size / 2);\n            background-color: $_color;\n            border-radius: $_border;\n            &::before,\n            &::after {\n                border-radius: $_border;\n                transition-duration: $_transition;\n                position: absolute;\n                @include size($_size, $_border);\n                background-color: $_color;\n                content: '';\n                top: calc($_gap * -1);\n            }\n\n            &::after {\n                top: $_gap;\n            }\n        }\n\n        &:hover {\n            .burger-circle {\n                background: $_bg-h;\n            }\n\n            .burger {\n                &,\n                &::before,\n                &::after {\n                    background: $_bg-h;\n                }\n            }\n\n            .burger-circle ~ .burger {\n                &,\n                &::before,\n                &::after {\n                    background: $_color-h;\n                }\n            }\n        }\n    }\n\n    [type='checkbox']#burger-btn {\n        width: 1px;\n        height: 1px;\n        padding: 0;\n        margin: -1px;\n        overflow: hidden;\n        clip: rect(0, 0, 0, 0);\n        white-space: nowrap;\n        border: 0;\n        position: absolute;\n    }\n\n    #burger-btn:checked ~ .burger-btn,\n    .burger-btn.open {\n        .burger {\n            background: transparent;\n\n            &:before {\n                // transform-origin: center top;\n                transform: translateY($_gap) rotateZ(45deg) scaleX(1.25);\n            }\n\n            &:after {\n                // transform-origin: center bottom;\n                transform: translateY(calc($_gap * -1)) rotateZ(-45deg) scaleX(1.25);\n            }\n        }\n    }\n}\n","@use 'sass:map';\r\n@use 'sass:list';\r\n// creates a Store\r\n$__variables: ();\r\n\r\n$css-var-uses-fallback: false !default;\r\n\r\n// https://github.com/sass/sass/issues/3091\r\n\r\n@function css-var($name) {\r\n    @if type-of($name) != string {\r\n        @error \"$name is not a string\";\r\n    }\r\n\r\n    @if $css-var-uses-fallback {\r\n        $fallback: v-get($name);\r\n\r\n        @if $fallback != null {\r\n            @return var(css-var-name($name), $fallback);\r\n        }\r\n    }\r\n\r\n    @return var(css-var-name($name));\r\n}\r\n\r\n@function css-var-name($name) {\r\n    @if type-of($name) != string {\r\n        @error \"$name is not a string\";\r\n    }\r\n\r\n    @return unquote('--#{$name}');\r\n}\r\n\r\n@function v-get($name, $fallback: null) {\r\n    @if type-of($name) != string {\r\n        @error \"$name is not a string\";\r\n    }\r\n\r\n    $value: map.get($__variables, $name);\r\n\r\n    @if $value == null {\r\n        @return $fallback;\r\n    }\r\n\r\n    @return $value;\r\n}\r\n\r\n@function v-add($name, $value) {\r\n    @if type-of($name) != string {\r\n        @error \"$name is not a string\";\r\n    }\r\n\r\n    $__variables: map.set($__variables, quote($name), $value) !global;\r\n\r\n    @return css-var($name);\r\n}\r\n\r\n@function v-add-map($map) {\r\n    @if type-of($map) != map {\r\n        @error \"$map is not a map\";\r\n    }\r\n\r\n    $result: ();\r\n\r\n    @each $name, $value in $map {\r\n        $result: map.set($result, $name, v-add($name, $value));\r\n    }\r\n\r\n    @return $result;\r\n}\r\n\r\n@function map-keys($map) {\r\n    //empty map is a list\r\n    @if type-of($map) != map and type-of($map) != list {\r\n        @error \"$map is not a map\";\r\n    }\r\n    $result: ();\r\n    @each $name, $_ in $map {\r\n        $result: list.append($result, $name, $separator: comma);\r\n    }\r\n    @return $result;\r\n}\r\n\r\n@function v-list() {\r\n    @return map-keys($__variables);\r\n}\r\n\r\n@mixin __load-variables($variables: ()) {\r\n    @each $name in $variables {\r\n        $value: v-get($name);\r\n\r\n        @if $value != null {\r\n            --#{$name}: #{$value};\r\n        }\r\n    }\r\n}\r\n\r\n@mixin v-load($variables: null, $root: auto) {\r\n    @if type-of($variables) != list {\r\n        $variables: v-list();\r\n    }\r\n\r\n    @if $root == auto {\r\n        $root: & == null;\r\n    }\r\n\r\n    @if $root {\r\n        @at-root {\r\n            :root {\r\n                @include __load-variables($variables);\r\n            }\r\n        }\r\n    } @else {\r\n        @include __load-variables($variables);\r\n    }\r\n\r\n    @content;\r\n}\r\n",null]}